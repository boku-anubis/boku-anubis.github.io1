<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>树莓派开机及一些配置</title>
      <link href="/2021/12/22/shu-mei-pai-kai-ji-ji-yi-xie-pei-zhi/"/>
      <url>/2021/12/22/shu-mei-pai-kai-ji-ji-yi-xie-pei-zhi/</url>
      
        <content type="html"><![CDATA[<h2 id="树莓派简介"><a href="#树莓派简介" class="headerlink" title="树莓派简介"></a>树莓派简介</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>键盘键位替换更改</title>
      <link href="/2021/12/19/jian-pan-jian-wei-ti-huan-geng-gai/"/>
      <url>/2021/12/19/jian-pan-jian-wei-ti-huan-geng-gai/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今天想起自己之前因更换键帽还是什么原因而致windows键失灵的键盘来，想着这键盘是87键布局的，其中有不少按键可有可无或者说是成对的，于是就想到能不能把这些多余的键和坏掉的键换一下功能，这样就能用其他状态良好的按键来代替Windows键了，坒 竟Windows键还是很关键的一个按键。在这样的需求下，我百度了一翻，在知乎上找到一篇可以解决的方案，试了一个确实不错。特此记录下。<br>原理部分就看原贴吧，就写个简单流程。</p><h3 id="新建名为名为”ScanCode-Map”键（二进制值）"><a href="#新建名为名为”ScanCode-Map”键（二进制值）" class="headerlink" title="新建名为名为”ScanCode Map”键（二进制值）"></a><em>新建名为名为”ScanCode Map”键（二进制值）</em></h3><ul><li>打开注册表在<code>cmd</code>或<code>powershell</code>命令行下键入<code>regedit</code>回车即可打开 找到”HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layout”</li><li>在<code>Keyboard Layout</code>下右建新建”ScanCode Map”键（二进制值）</li></ul><p><img src="https://s2.loli.net/2021/12/19/AQcyS3mXKT6IeUP.png"></p><h3 id="新建layout-manage-py"><a href="#新建layout-manage-py" class="headerlink" title="新建layout_manage.py"></a><em>新建layout_manage.py</em></h3><p>源码如下：</p><pre class="line-numbers language-none"><code class="language-none">#!/usr/bin/env python3#-*- coding:utf-8 -*-import sysimport ossave_format = "reg"    #这个值可以修改，有两个选项(bat和reg)，可选择生成bat批处理文件或者reg注册表脚本文件,功能一样class CountError(Exception):    #文本文件格式错误异常    passclass FileFormatError(Exception):    #save_format值异常    passif save_format not in ["bat","reg"]:    raise FileFormatError("The variable 'save_format'`s value must be 'bat' or 'reg'.")if __name__ == "__main__":        if not os.path.isdir("layout_"+save_format):        os.mkdir("layout_"+save_format)    if len(sys.argv) == 1:        if save_format == "bat":            with open("layout_bat/recover.bat",'w', encoding="utf-8") as f:                f.write('@echo off\nreg delete "hklm\\system\\currentcontrolset\\control\\keyboard layout" /v "ScanCode Map" /f\necho "键位已恢复，重启系统后生效"\npause')            input("恢复文件recover.bat已生成至layout_bat文件夹下，以管理员身份右键执行该文件后重启系统生效。\n按回车键退出程序...")        else:            with open("layout_reg/recover.reg",'w', encoding="utf-8") as f:                f.write('Windows Registry Editor Version 5.00\n[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Keyboard Layout]\n"ScanCode Map"=hex:00,00,00,00,00,00,00,00,01,00,00,00,00,00,00,00')            input("恢复文件recover.reg已生成至layout_reg文件夹下，双击执行该文件后重启系统生效。\n按回车键退出程序...")    elif len(sys.argv) == 2:        scan_code_dict = {            "00 00":"None",            "01 00":"Esc",    #即Esc键的扫描码是"0001"            "02 00":"1",            "03 00":"2",            "04 00":"3",            "05 00":"4",            "06 00":"5",            "07 00":"6",            "08 00":"7",            "09 00":"8",            "0a 00":"9",            "0b 00":"0",            "0c 00":"-",            "0d 00":"=",            "0e 00":"Backspace",            "0f 00":"Tab",            "10 00":"Q",            "11 00":"W",            "12 00":"E",            "13 00":"R",            "14 00":"T",            "15 00":"Y",            "16 00":"U",            "17 00":"I",            "18 00":"O",            "19 00":"P",            "1a 00":"[",            "1b 00":"]",            "1c 00":"Enter",            "1d 00":"Left Ctrl",            "1e 00":"A",            "1f 00":"S",            "20 00":"D",            "21 00":"F",            "22 00":"G",            "23 00":"H",            "24 00":"J",            "25 00":"K",            "26 00":"L",            "27 00":"Semicolon",    #由评论区指出，键盘上的“;”应该用其他值代替，否则会与配置文本文件中的“;”混淆            "28 00":"'",            "29 00":"`",            "2a 00":"Left Shift",            "2b 00":"\\",            "2c 00":"Z",            "2d 00":"X",            "2e 00":"C",            "2f 00":"V",            "30 00":"B",            "31 00":"N",            "32 00":"M",            "33 00":",",            "34 00":".",            "35 00":"/",            "36 00":"Right Shift",            "37 00":"n*",            "38 00":"Left Alt",            "39 00":"Space",            "3a 00":"Caps Lock",            "3b 00":"F1",            "3c 00":"F2",            "3d 00":"F3",            "3e 00":"F4",            "3f 00":"F5",            "40 00":"F6",            "41 00":"F7",            "42 00":"F8",            "43 00":"F9",            "44 00":"F10",            "45 00":"Num Lock",            "46 00":"Scroll Lock",            "47 00":"n7",            "48 00":"n8",            "49 00":"n9",            "4a 00":"n-",            "4b 00":"n4",            "4c 00":"n5",            "4d 00":"n6",            "4e 00":"n+",            "4f 00":"n1",            "50 00":"n2",            "51 00":"n3",            "52 00":"n0",            "53 00":"n.",            "57 00":"F11",            "58 00":"F12",                        "1c e0":"nEnter",            "1d e0":"Right Ctrl",            "37 e0":"PrtSc",            "38 e0":"Right Alt",            "47 e0":"Home",            "48 e0":"Up",            "49 e0":"Page Up",            "4b e0":"Left",            "4d e0":"Right",            "4f e0":"End",            "50 e0":"Down",            "51 e0":"Page Down",            "52 e0":"Insert",            "53 e0":"Delete",            "5b e0":"Left Windows",            "5c e0":"Right Windows",            }        fun_key_dict = dict((m.upper(),n) for n,m in scan_code_dict.items())    #键值互换,键值全大写        content = '00 00 00 00 00 00 00 00'                #用于暂时保存映射前后的键位，判断这次键位修改是否有风险        before_map_set = set()        after_map_set = set()        with open(sys.argv[1], encoding="utf-8") as f:            p = f.read().strip().split(';')            p.remove('')            content += ' {:0&gt;2x} 00 00 00'.format(len(p)+1)            try:                for i in p:                    if len(i.strip().split(':')) == 2:                        before_map_set.add(i.split(':')[0].strip().upper())                        after_map_set.add(i.split(':')[1].strip().upper())                        content += ' '+fun_key_dict[i.split(':')[1].strip().upper()]+' '+fun_key_dict[i.split(':')[0].strip().upper()]                    else:                        raise CountError                content += ' 00 00 00 00'            except KeyError:                print("文件中键名称有误")                            except CountError:                print("文件中未按格式书写")            else:                if before_map_set != after_map_set:                    run = input("此次键位替换存在风险，{}键功能将在键盘上无对应按键，是否继续？(输入y继续，否则退出程序)".format(str(before_map_set-after_map_set)[1:-1]))                    if run != 'y':                        sys.exit()                if save_format == "bat":                    with open("layout_bat/"+'.'.join(sys.argv[1].split('\\')[-1].split('.')[:-1])+'.bat','w', encoding="utf-8") as g:                        g.write('@echo off\nreg add "hklm\\system\\currentcontrolset\\control\\keyboard layout" /v "ScanCode Map" /t REG_BINARY /d "{}" /f\necho "键位已完成修改，重启系统后生效"\npause'.format(''.join(content.split())))                    input("...\n{}文件已生成至layout_bat目录下，右键以管理员身份执行该文件后重启系统生效。\n按回车键退出程序...".format('.'.join(sys.argv[1].split('\\')[-1].split('.')[:-1])+'.'+save_format))                else:                    with open("layout_reg/"+'.'.join(sys.argv[1].split('\\')[-1].split('.')[:-1])+'.reg','w', encoding="utf-8") as g:                        g.write('Windows Registry Editor Version 5.00\n[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Keyboard Layout]\n"ScanCode Map"=hex:{}'.format(','.join(content.split())))                    input("...\n{}文件已生成至layout_reg目录下，双击执行该文件后重启系统生效。\n按回车键退出程序...".format('.'.join(sys.argv[1].split('\\')[-1].split('.')[:-1])+'.'+save_format))    else:        input("传入参数错误，按回车键退出程序...")<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="新建换键文本“test”"><a href="#新建换键文本“test”" class="headerlink" title="新建换键文本“test”"></a>新建换键文本“test”</h3><p><img src="https://s2.loli.net/2021/12/19/hgVEIZkpujanJqK.png"></p><p>书写格式：</p><p>冒号前为物理按键，冒号后为按键功能。：</p><ul><li>忽略大小写</li><li>忽略换行符、冒号、分号前后的空白字符（位于两单词间的空格不忽略，如Left Ctrl中间只能有一个空格）</li><li>小键盘上的字符前需要加n，例如小键盘上的’0’和’.’应分别写为”n0”和’n.’</li><li>一些功能键需正确写入，如：Tab、Esc、CapsLock、Backspace、Delete、Enter、Left Ctrl、Left Windows等</li></ul><h3 id="运行test"><a href="#运行test" class="headerlink" title="运行test"></a><em>运行test</em></h3><p><img src="https://s2.loli.net/2021/12/19/1HnVxdviyAC7RX5.png"></p><p>在文件所在处打开cmd或powershell执行<code>python layout_manage.py test.txt</code><br><img src="https://s2.loli.net/2021/12/19/TRmYq8sZb9Va2QK.png"><br>双击<code>layout_reg</code>文件夹下名为<code>test.regr</code>的注册表文件即可将修改的值传到之前新建的二进制值中<br><img src="https://s2.loli.net/2021/12/19/B9ELSbth4HfaQWe.png"></p><p>小建议：在运行<code>test.text</code>前先双击<code>layout_manage.py</code>，生成一个<code>layout_reg</code>文件夹和其下一个名为<code>recover.regr</code>的注册表文件，打开此可以恢复默认</p><p>参考资料：<a href="https://zhuanlan.zhihu.com/p/29581818">键盘键位修改及管理（Windows篇）</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo主题：matery个人配置</title>
      <link href="/2021/12/17/hexo-zhu-ti-matery-ge-ren-pei-zhi/"/>
      <url>/2021/12/17/hexo-zhu-ti-matery-ge-ren-pei-zhi/</url>
      
        <content type="html"><![CDATA[<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>在博客文件夹下的 themes 文件夹下使用 git clone 命令来下载:</p><p><code>git clone https://github.com/blinkfox/hexo-theme-matery.git</code></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h3><p>修改 Hexo 根目录下的<code> _config.yml</code> 的 <code>theme</code> 的值：<code>theme: hexo-theme-matery</code></p><p>根目录下的<code> _config.yml</code> 其他设置：</p><pre class="line-numbers language-none"><code class="language-none"># Sitetitle: 一夜鱼龙subtitle: 方寸description: keywords:author: 却把青梅嗅language: zh-CNtimezone: Japan# URLurl: http://boku-anubis.github.ioindex_generator:  path: ''  per_page: 12  order_by: -date# Pagination## Set per_page to 0 to disable paginationper_page: 12pagination_dir: page<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="新建分类-categories-页"><a href="#新建分类-categories-页" class="headerlink" title="新建分类 categories 页"></a>新建分类 categories 页</h2><p>categories 页是用来展示所有分类的页面，如果博客<code> source</code> 目录下还没有 <code>categories/index.md </code>文件，那么新建一个，命令如下：</p><p><code>hexo new page "categories"</code></p><p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-none"><code class="language-none">---title: categoriesdate: 2018-09-30 17:25:30type: "categories"layout: "categories"---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="新建标签-tags-页"><a href="#新建标签-tags-页" class="headerlink" title="新建标签 tags 页"></a>新建标签 tags 页</h2><p>tags 页是用来展示所有标签的页面，如果在你的博客 source 目录下还没有 tags/index.md 文件，那么你就需要新建一个，命令如下：</p><p><code>hexo new page "tags"</code></p><p>编辑你刚刚新建的页面文件 /source/tags/index.md，至少需要以下内容：</p><pre class="line-numbers language-none"><code class="language-none">---title: tagsdate: 2018-09-30 18:23:38type: "tags"layout: "tags"---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="新建关于我-about-页"><a href="#新建关于我-about-页" class="headerlink" title="新建关于我 about 页"></a>新建关于我 about 页</h2><p>about 页是用来展示关于我和我的博客信息的页面，如果在你的博客 <code>source </code>目录下还没有<code> about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><p><code>hexo new page "about"</code></p><p>编辑你刚刚新建的页面文件 /source/about/index.md，至少需要以下内容：</p><pre class="line-numbers language-none"><code class="language-none">---title: aboutdate: 2018-09-30 17:25:30type: "about"layout: "about"---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>新建留言板 contact 页（可选的）<br>contact 页是用来展示留言板信息的页面，如果在你的博客 <code>source </code>目录下还没有 <code>contact/index.md </code>文件，那么你就需要新建一个，命令如下：</p><p><code>hexo new page "contact"</code></p><p>编辑你刚刚新建的页面文件 /source/contact/index.md，至少需要以下内容：</p><pre class="line-numbers language-none"><code class="language-none">---title: contactdate: 2018-09-30 17:25:30type: "contact"layout: "contact"---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注：本留言板功能依赖于第三方评论系统，请激活你的评论系统才有效果。并且在主题的 _config.yml 文件中，第 19 至 21 行的“菜单”配置，取消关于留言板的注释即可。</p><h2 id="新建友情链接-friends-页（可选的）"><a href="#新建友情链接-friends-页（可选的）" class="headerlink" title="新建友情链接 friends 页（可选的）"></a>新建友情链接 friends 页（可选的）</h2><p>friends 页是用来展示友情链接信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><p><code>hexo new page "friends"</code></p><p>编辑你刚刚新建的页面文件 /source/friends/index.md，至少需要以下内容：</p><pre class="line-numbers language-none"><code class="language-none">---title: friendsdate: 2018-12-12 21:25:30type: "friends"layout: "friends"---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>同时，在你的博客 source 目录下新建 _data 目录，在 _data 目录中新建 friends.json 文件，文件内容如下所示：</p><pre class="line-numbers language-none"><code class="language-none">[{    "avatar": "http://image.luokangyuan.com/1_qq_27922023.jpg",    "name": "码酱",    "introduction": "我不是大佬，只是在追寻大佬的脚步",    "url": "http://luokangyuan.com/",    "title": "前去学习"}, {    "avatar": "http://image.luokangyuan.com/4027734.jpeg",    "name": "闪烁之狐",    "introduction": "编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬",    "url": "https://blinkfox.github.io/",    "title": "前去学习"}, {    "avatar": "http://image.luokangyuan.com/avatar.jpg",    "name": "ja_rome",    "introduction": "平凡的脚步也可以走出伟大的行程",    "url": "https://me.csdn.net/jlh912008548",    "title": "前去学习"}]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="新建-404-页"><a href="#新建-404-页" class="headerlink" title="新建 404 页"></a>新建 404 页</h2><p>如果在你的博客 <code>source</code> 目录下还没有<code> 404.md</code> 文件，那么你就需要新建一个</p><p><code>hexo new page 404</code></p><p>编辑你刚刚新建的页面文件 /source/404/index.md，至少需要以下内容：</p><pre class="line-numbers language-none"><code class="language-none">---title: 404date: 2018-09-30 17:25:30type: "404"layout: "404"description: "Oops～，我崩溃了！找不到你想要的页面 :("---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="菜单导航配置"><a href="#菜单导航配置" class="headerlink" title="菜单导航配置"></a>菜单导航配置</h2><p>配置基本菜单导航的名称、路径url和图标icon.</p><p>1.菜单导航名称可以是中文也可以是英文(如：Index或主页) 2.图标icon 可以在Font Awesome 中查找</p><pre class="line-numbers language-none"><code class="language-none">menu:  Index:    url: /    icon: fas fa-home  Tags:    url: /tags    icon: fas fa-tags  Categories:    url: /categories    icon: fas fa-bookmark  Archives:    url: /archives    icon: fas fa-archive  About:    url: /about    icon: fas fa-user-circle  Friends:    url: /friends    icon: fas fa-address-book<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二级菜单配置方法"><a href="#二级菜单配置方法" class="headerlink" title="二级菜单配置方法"></a>二级菜单配置方法</h2><p>如果你需要二级菜单则可以在原基本菜单导航的基础上如下操作</p><p>在需要添加二级菜单的一级菜单下添加children关键字(如:About菜单下添加children)</p><p>在children下创建二级菜单的 名称name,路径url和图标icon.<br>注意每个二级菜单模块前要加<code> -</code>.<br>注意缩进格式</p><pre class="line-numbers language-none"><code class="language-none">menu:  Index:    url: /    icon: fas fa-home  Tags:    url: /tags    icon: fas fa-tags  Categories:    url: /categories    icon: fas fa-bookmark  Archives:    url: /archives    icon: fas fa-archive  About:    url: /about    icon: fas fa-user-circle-o  Friends:    url: /friends    icon: fas fa-address-book  Medias:    icon: fas fa-list    children:      - name: Music        url: /music        icon: fas fa-music      - name: Movies        url: /movies        icon: fas fa-film      - name: Books        url: /books        icon: fas fa-book      - name: Galleries        url: /galleries        icon: fas fa-image<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h2><p>从 Hexo5.0 版本开始自带了 prismjs 代码语法高亮的支持，本主题对此进行了改造支持。</p><p>如果你的博客中曾经安装过 hexo-prism-plugin 的插件，那么你须要执行 npm uninstall hexo-prism-plugin 来卸载掉它，否则生成的代码中会有 { 和 } 的转义字符。</p><p>然后，修改 Hexo 根目录下<code> _config.yml</code> 文件中 <code>highlight.enable </code>的值为 <code>false</code>，并将 <code>prismjs.enable</code> 的值设置为 <code>true</code>，主要配置如下：</p><pre class="line-numbers language-none"><code class="language-none">highlight:  enable: false  line_number: true  auto_detect: false  tab_replace: ''  wrap: true  hljs: falseprismjs:  enable: true  preprocess: true  line_number: true  tab_replace: ''<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>主题中默认的 prismjs 主题是 Tomorrow Night，如果你想定制自己的主题，可以前往 prismjs 下载页面 定制下载自己喜欢的主题 css 文件，然后将此 css 主题文件取名为 prism.css，替换掉 hexo-theme-matery 主题文件夹中的 source/libs/prism/prism.css 文件即可。</p><h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><p>本主题中还使用到了 hexo-generator-search 的 Hexo 插件来做内容搜索，安装命令如下：</p><p><code>npm install hexo-generator-search --save</code></p><p>在 Hexo <code>根目录</code>下的<code>_config.yml</code>文件中，新增以下的配置项：</p><pre class="line-numbers language-none"><code class="language-none">search:  path: search.xml  field: post  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="中文链接转拼音（建议安装）"><a href="#中文链接转拼音（建议安装）" class="headerlink" title="中文链接转拼音（建议安装）"></a>中文链接转拼音（建议安装）</h2><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 SEO，且 gitment 评论对中文链接也不支持。我们可以用 hexo-permalink-pinyin Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>安装命令如下：</p><p><code>npm i hexo-permalink-pinyin --save</code></p><p>在 Hexo <code>根目录</code>下的 _config.yml 文件中，新增以下的配置项：</p><pre class="line-numbers language-none"><code class="language-none">permalink_pinyin:  enable: true  separator: '-' # default: '-'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>注：除了此插件外，hexo-abbrlink 插件也可以生成非中文的链接。</p><h2 id="文章字数统计插件（建议安装）"><a href="#文章字数统计插件（建议安装）" class="headerlink" title="文章字数统计插件（建议安装）"></a>文章字数统计插件（建议安装）</h2><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 hexo-wordcount插件。</p><p>安装命令如下：</p><p><code>npm i --save hexo-wordcount</code></p><p>然后只需在<code>本主题</code>下的<code> _config.yml</code> 文件中，将各个文章字数相关的配置激活即可：</p><pre class="line-numbers language-none"><code class="language-none">postInfo:  date: true  update: false  wordCount: false # 设置文章字数统计为 true.  totalCount: false # 设置站点文章总字数统计为 true.  min2read: false # 阅读时长.  readCount: false # 阅读次数.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="添加emoji表情支持（可选的）"><a href="#添加emoji表情支持（可选的）" class="headerlink" title="添加emoji表情支持（可选的）"></a>添加emoji表情支持（可选的）</h2><p>本主题新增了对emoji表情的支持，使用到了 hexo-filter-github-emojis 的 Hexo 插件来支持 emoji表情的生成，把对应的markdown emoji语法（::,例如：<span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>）转变成会跳跃的emoji表情，安装命令如下：</p><p><code>npm install hexo-filter-github-emojis --save</code></p><p>在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项：</p><pre class="line-numbers language-none"><code class="language-none">githubEmojis:  enable: true  className: github-emoji  inject: true  styles:  customEmojis:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行 hexo clean &amp;&amp; hexo g 重新生成博客文件，然后就可以在文章中对应位置看到你用emoji语法写的表情了。</p><h2 id="修改页脚"><a href="#修改页脚" class="headerlink" title="修改页脚"></a>修改页脚</h2><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 /layout/_partial/footer.ejs 文件中，包括站点、使用的主题、访问量等。</p><h2 id="修改社交链接"><a href="#修改社交链接" class="headerlink" title="修改社交链接"></a>修改社交链接</h2><p>在<code>主题</code>的 <code>_config.yml</code> 文件中，默认支持 QQ、GitHub 和邮箱等的配置，你可以在<code>主题文件</code>的<code> /layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p><pre class="line-numbers language-none"><code class="language-none">&lt;% if (theme.socialLink.github) { %&gt;    &lt;a href="&lt;%= theme.socialLink.github %&gt;" class="tooltipped" target="_blank" data-tooltip="访问我的GitHub" data-position="top" data-delay="50"&gt;        &lt;i class="fab fa-github"&gt;&lt;/i&gt;    &lt;/a&gt;&lt;% } %&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中，社交图标（如：fa-github）你可以在 Font Awesome 中搜索找到。以下是常用社交图标的标识，供你参考：</p><pre class="line-numbers language-none"><code class="language-none">Facebook: fab fa-facebookTwitter: fab fa-twitterGoogle-plus: fab fa-google-plusLinkedin: fab fa-linkedinTumblr: fab fa-tumblrMedium: fab fa-mediumSlack: fab fa-slackSina Weibo: fab fa-weiboWechat: fab fa-weixinQQ: fab fa-qqZhihu: fab fa-zhihu<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意: 本主题中使用的 Font Awesome 版本为 5.11.0。</p><h2 id="配置音乐播放器（可选的）"><a href="#配置音乐播放器（可选的）" class="headerlink" title="配置音乐播放器（可选的）"></a>配置音乐播放器（可选的）</h2><p>要支持音乐播放，在<code>主题</code>的<code> _config.yml</code> 配置文件中激活<code>music</code>配置即可：</p><pre class="line-numbers language-none"><code class="language-none"># 是否在首页显示音乐music:  enable: true  title:         # 非吸底模式有效    enable: true    show: 听听音乐  server: netease   # require music platform: netease, tencent, kugou, xiami, baidu  type: playlist    # require song, playlist, album, search, artist  id: 503838841     # require song id / playlist id / album id / search keyword  fixed: false      # 开启吸底模式  autoplay: false   # 是否自动播放  theme: '#42b983'  loop: 'all'       # 音频循环播放, 可选值: 'all', 'one', 'none'  order: 'random'   # 音频循环顺序, 可选值: 'list', 'random'  preload: 'auto'   # 预加载，可选值: 'none', 'metadata', 'auto'  volume: 0.7       # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效  listFolded: true  # 列表默认折叠<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>server可选netease（网易云音乐），tencent（QQ音乐），kugou（酷狗音乐），xiami（虾米音乐），</p><p>baidu（百度音乐）。</p><p>type可选song（歌曲），playlist（歌单），album（专辑），search（搜索关键字），artist（歌手）</p><p>id获取方法示例: 浏览器打开网易云音乐，点击我喜欢的音乐歌单，浏览器地址栏后面会有一串数字，playlist的id</p><p>即为这串数字。</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PicGo+SM.MS建立图床</title>
      <link href="/2021/12/17/picgo-sm-ms-jian-li-tu-chuang/"/>
      <url>/2021/12/17/picgo-sm-ms-jian-li-tu-chuang/</url>
      
        <content type="html"><![CDATA[<h2 id="下载PicGO"><a href="#下载PicGO" class="headerlink" title="下载PicGO"></a>下载PicGO</h2><p><a href="https://picgo.github.io/PicGo-Doc/">PicGo官方地址</a><br><img src="https://s2.loli.net/2021/12/17/hFBeD8guOfSK2R3.png"><br><a href="https://github.com/Molunerfinn/PicGo/releases">下载界面</a><br><img src="https://s2.loli.net/2021/12/17/35p7ysMVKJbNoHW.png"></p><h2 id="注册SM-SM"><a href="#注册SM-SM" class="headerlink" title="注册SM.SM"></a>注册SM.SM</h2><p><a href="https://sm.ms/">SM.MS</a><br><img src="https://s2.loli.net/2021/12/17/KEMzub8RAFe3rGT.jpg"></p><h2 id="取得api-token"><a href="#取得api-token" class="headerlink" title="取得api token"></a>取得api token</h2><p><img src="https://s2.loli.net/2021/12/17/15LmXtDQydH36Vo.jpg"></p><p><img src="https://s2.loli.net/2021/12/17/2Uuiajvh7YoVxyB.jpg"></p><p><img src="https://s2.loli.net/2021/12/17/BLVQqlSX8hIg1oF.jpg"></p><h2 id="PicGo设置"><a href="#PicGo设置" class="headerlink" title="PicGo设置"></a>PicGo设置</h2><p><img src="https://s2.loli.net/2021/12/17/f2TqVhNSAkY6HWy.png"><br><img src="https://s2.loli.net/2021/12/17/3j6E7KlUVbciLHz.png"></p><p>设置完即可上传图片并获得图片地址<br><img src="https://s2.loli.net/2021/12/17/xFjAVvZbm4CY5Sq.png"></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客搭建并布署到github基本流程</title>
      <link href="/2021/12/17/hexo-bo-ke-da-jian-bing-bu-shu-dao-github-ji-ben-liu-cheng/"/>
      <url>/2021/12/17/hexo-bo-ke-da-jian-bing-bu-shu-dao-github-ji-ben-liu-cheng/</url>
      
        <content type="html"><![CDATA[<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul><li>安装<a href="https://nodejs.org/zh-cn/">Nodejs</a><br><img src="https://s2.loli.net/2021/12/17/UpWOyASeDouxaHw.jpg"></li><li>安装<a href="https://git-scm.com/downloads">gitbash</a><br><img src="https://s2.loli.net/2021/12/17/E7Y41hJLCWn83Ue.png"></li><li>注册<a href="https://github.com/">github</a><br><img src="https://s2.loli.net/2021/12/17/6waPT9NQyuIzKDj.png"></li></ul><h2 id="操作部分"><a href="#操作部分" class="headerlink" title="操作部分"></a>操作部分</h2><h3 id="Github创建一个新的仓库"><a href="#Github创建一个新的仓库" class="headerlink" title="Github创建一个新的仓库"></a>Github创建一个新的仓库</h3><p> 注意仓库命名格式：YourGithubName.github.io<br><img src="https://s2.loli.net/2021/12/17/fzZT5eoXD9OsLqn.png"><br>复制好图中圈的地址，后面要用<br><img src="https://s2.loli.net/2021/12/17/Ehz3onOSr9WXFMI.png"></p><h3 id="在想建立博客文件夹的磁盘右键打开gitbash"><a href="#在想建立博客文件夹的磁盘右键打开gitbash" class="headerlink" title="在想建立博客文件夹的磁盘右键打开gitbash"></a>在想建立博客文件夹的磁盘右键打开gitbash</h3><p><img src="https://s2.loli.net/2021/12/17/WwTSyfGR6lrhjZa.png"></p><p>打开界面如下图<br><img src="https://s2.loli.net/2021/12/17/1Q6fOvZdGrNuTJI.png"><br>接下来输入下列命令（按需输入，有些可输可不输，如遇到npm更新等问题请按提示操作即可）：</p><p><code>node -v </code>  查看node版本</p><p><code>npm -v</code>   查看npm版本</p><p><code>npm install -g cnpm --registry=http://registry.npm.taobao.org/</code> 安装淘宝的cnpm 管理器</p><p><code>cnpm -v </code>查看cnpm版本</p><p><code>cnpm install -g hexo-cli</code>安装hexo框架</p><p><code>hexo -v</code> 查看hexo版本</p><p><code>mkdir blog</code> 创建名为blog的目录</p><p><code>cd blog</code> 进入blog目录</p><p><code> hexo init</code> 生成博客并初始化博客</p><p><code>hexo s</code>启动本地博客服务</p><p><code>http://localhost:4000 </code> 本地访问地址<br><img src="https://s2.loli.net/2021/12/17/mEcQJ2Alvqw8MYb.png"></p><p><code>hexo n "hexo博客搭建并布署到github基本流程" </code>创建新的文章</p><p><code>cd .. </code>返回blog目录</p><p><code>hexo clean</code> 清理</p><p><code>hexo g</code> #生成</p><p><code>cnpm install --save hexo-deployer-git</code> 在blog目录下安装git部署插件</p><h2 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="配置_config.yml"></a>配置_config.yml</h2><p>所填地址为前文所提的地址</p><pre class="line-numbers language-none"><code class="language-none">deploy:  type: git  repo: https://github.com/boku-anubis/boku-anubis.github.io.git  branch: master    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>hexo d</code> 部署到Github仓库里</p><h2 id="博客样图"><a href="#博客样图" class="headerlink" title="博客样图"></a>博客样图</h2><p><img src="https://s2.loli.net/2021/12/17/LGT1PK8NsjoRbVq.png"></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
